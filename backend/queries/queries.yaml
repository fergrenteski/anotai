queries:
  insert_request_log: >
    INSERT INTO request_logs (method, endpoint, status_code, ip_address, user_agent)
    VALUES ($1, $2, $3, $4, $5);

  select_user_by_email: >
    SELECT user_id, name, email, password_hash 
    FROM users
    WHERE email = $1;

  select_user_by_token: >
    SELECT user_id, email 
    FROM user_email_verified_keys
    WHERE token = $1
      AND expires_at > CURRENT_TIMESTAMP
    LIMIT 1;

  delete_token_email_by_token: >
    DELETE FROM user_email_verified_keys 
    WHERE token = $1;

  select_user_by_token_resetpass: >
    SELECT user_id, email 
        FROM user_reset_password_keys
        WHERE token = $1
          AND expires_at > CURRENT_TIMESTAMP
        LIMIT 1;

  update_password_by_email: >
    UPDATE users
       SET password_hash = $2,
           updated_at = CURRENT_TIMESTAMP
       WHERE email = $1
       RETURNING user_id;
    
  update_verified_user_by_email: >
    UPDATE users
    SET email_verified = TRUE,
        updated_at = CURRENT_TIMESTAMP
    WHERE email = $1
    RETURNING user_id;

  insert_user: >
    INSERT INTO users (name, email, password_hash) 
    VALUES ($1, $2, $3) 
    RETURNING user_id, name, email;

  insert_user_log_register: >
    INSERT INTO user_logs (user_id, action) 
    VALUES ($1, 'REGISTER');

  insert_user_log_login: >
    INSERT INTO user_logs (user_id, action) 
    VALUES ($1, 'LOGIN');

  insert_user_log_reset_password: >
    INSERT INTO user_logs (user_id, action) 
    VALUES ($1, 'RESET PASSWORD');

  insert_user_log_email_confirm: >
    INSERT INTO user_logs (user_id, action) 
    VALUES ($1, 'CONFIRMED EMAIL');

  insert_user_reset_password_keys: >
    INSERT INTO user_reset_password_keys (user_id, email, token, expires_at)
    VALUES ($1, $2, $3, $4)
    RETURNING *;

  delete_user_reset_password_keys: >
    DELETE FROM user_reset_password_keys 
    WHERE user_id = $1;

  insert_user_email_confirm_keys: >
    INSERT INTO user_email_verified_keys (user_id, email, token, expires_at)
    VALUES ($1, $2, $3, $4)
    RETURNING *;
  
  select_user_reset_password_keys_by_token: >
    SELECT t.token, u.user_id, u.email, u.name, t.expires_at
    FROM user_reset_password_keys t
    LEFT JOIN users u 
    ON t.user_id = u.user_id
    AND u.expired_at IS NULL
    WHERE t.token = $1; 

  select_groups_by_user_id: >
    SELECT 
      *
      FROM vw_user_groups
    WHERE user_id = $1;

  select_group_by_id: >
    SELECT 
      group_id,
      group_name,
      description,
      category_id,
      category_name
      FROM vw_groups
    WHERE group_id = $1
    LIMIT 1;

  select_list_by_group_id: >
    SELECT 
      *
      FROM vw_lists
    WHERE group_id = $1;

  select_groups_categories: >
    SELECT 
      groups_category_id as id,
      name
    FROM groups_category

  insert_group: >
    INSERT INTO groups (name, description, category_id, user_admin_id) 
    VALUES ($1, $2, $3, $4) 
    RETURNING group_id;

  update_group: >
    UPDATE groups 
    SET
      name = $1,
      description = $2,
      category_id = $3,
      updated_at = CURRENT_TIMESTAMP
    WHERE group_id = $4;

  expire_group: >
    UPDATE groups
    SET expired_at = CURRENT_TIMESTAMP 
    WHERE group_id = $1

  insert_user_groups: >
    INSERT INTO group_users (user_id, group_id, verified)
    VALUES ($1, $2, $3)

  expire_user_groups: >
    DELETE FROM group_users
    WHERE group_id = $1

  select_user_group_member: >
    SELECT * FROM group_users
    WHERE user_id = $1 AND group_id = $2 AND verified = TRUE;