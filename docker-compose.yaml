version: '3.8'

services:
  anotaai_db:
    image: postgres:latest
    container_name: anotaai_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - anotaai_network
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./ssl/server.crt:/var/lib/postgresql/server.crt
      - ./ssl/server.key:/var/lib/postgresql/server.key
    command: >
      postgres -c ssl=on 
               -c ssl_cert_file=/var/lib/postgresql/server.crt
               -c ssl_key_file=/var/lib/postgresql/server.key

  anotaai_db_init:
    image: postgres:latest
    container_name: anotaai_db_init
    restart: on-failure
    depends_on:
      - anotaai_db
    volumes:
      - ./backend/sql/schema.sql:/schema.sql
    networks:
      - anotaai_network
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      echo 'Aguardando banco de dados...';
      until pg_isready -h anotaai_db -p 5432 -U ${POSTGRES_USER}; do sleep 2; done;
      echo 'Banco de dados pronto, executando script SQL';
      PGPASSWORD=${POSTGRES_PASSWORD} psql -h anotaai_db -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f /schema.sql;
      echo 'Schema criado com sucesso!';
      "

  anotaai_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: anotaai_backend
    restart: always
    depends_on:
      - anotaai_db_init
    ports:
      - "3000:3000"
      - "9229:9229"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      DB_HOST: ${DB_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_PORT: 5432
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    command: sh -c "npm install && npm run dev"
    networks:
      - anotaai_network

  anotaai_frontend:
    image: nginx:latest
    container_name: anotaai_frontend
    restart: always
    depends_on:
      - anotaai_backend
    ports:
      - "8080:80"
    env_file:
      - .env
    volumes:
      - ./frontend:/usr/share/nginx/
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - anotaai_network

networks:
  anotaai_network:
    driver: bridge

volumes:
  pgdata:
